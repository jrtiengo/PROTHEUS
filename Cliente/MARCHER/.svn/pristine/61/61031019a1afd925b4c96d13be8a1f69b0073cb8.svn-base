#INCLUDE "TOTVS.ch"

STATIC cPortDefault := "LPT2"

/*/{Protheus.doc} ETIQPROD
Impressão de etiquetas
@type function
@version 12.1.27
@author Jean Rehermann | Solutio
@since 03/12/2012
/*/
User Function ETIQPROD()

	Local cOpcImpr     := "Produto"
	Local aOpcoes      := {"Produto","NF Entrada"}
	Local cPorta       := "LPT2"
	Local aPortas      := {"USB001","LPT1","LPT2","COM1","COM2","COM3","COM4","COM5","COM6"}

	Private oDlg, oGetPorta
	// Objetos da tela da Opção "Produto"
	Private cCodProd   := space(30)
	Private cDescProd  := space(50)
	Private nQtdeEtiq  := 1
	Private oGetProd, oGetDescPrd, oGetQtEtiq

	// Objetos da tela de "NF Entrada"
	Private cNFEnt     := Space(9)
	Private cSerie     := Space(3)
	Private cForn      := Space(6)
	Private cLojaForn  := Space(2)
	Private oGetNFEnt, oGetSerie

   DbSelectArea("SB1")
   DbSetOrder(1)

	oDlg := MSDialog():New( 092,242,386,670,"Etiquetas Marcher",,,.F.,,,,,,.T.,,,.T. )

	TSay():New( 10,10,{||"Tipo de Impressão"},oDlg,,,.F.,.F.,.F.,.T.,CLR_BLACK,CLR_WHITE,052,010)
	TComboBox():New( 09,55/*80*/,{|u| If(PCount()>0,cOpcImpr :=u,cOpcImpr )},aOpcoes,072,010,oDlg,,{||AtivInat(cOpcImpr)},,CLR_BLACK,CLR_WHITE,.T.,,"",,,,,,,cOpcImpr )

	TSay():New( 30,10,{||"Porta"},oDlg,,,.F.,.F.,.F.,.T.,CLR_BLACK,CLR_WHITE,032,010)
	TComboBox():New( 29,25,{|u| If(PCount()>0,cPorta :=u,cPorta )},aPortas,072,010,oDlg,,{||}/*bChange*/,,CLR_BLACK,CLR_WHITE,.T.,,"",,,,,,,cPorta  )

   /*Objetos da tela da Opção "Produto"*/
	oGetProd := TGet():New( 50,10,{|u| If(PCount()>0,cCodProd:=u,cCodProd)},oDlg,065,010,"",,CLR_BLACK,CLR_WHITE,,,,.T.,"",,/*bWhen*/,.F.,.F.,{||cDescProd := RetDescProd(cCodProd)}/*bChange*/,.F.,.F.,"SB1","cCodProd",,,,,,,"Produto",1)
	oGetDescPrd := TGet():New( 56,80,{|u| If(PCount()>0,cDescProd:=u,cDescProd)},oDlg,080,010,'',{|| NIL },CLR_BLACK,CLR_WHITE,,,,.T.,"",,{|| .F. }/*bWhen*/,.F.,.F.,,.F.,.F.,"","cDescProd")

	oGetQtEtiq := TGet():New( 80,10,{|u| If(PCount()>0,nQtdeEtiq:=u,nQtdeEtiq)},oDlg,050,010,"999",,CLR_BLACK,CLR_WHITE,,,,.T.,"",,/*bWhen*/,.F.,.F.,/*bChange*/,.F.,.F.,"","nQtdeEtiq",,,,,.T.,,"Qtd Etiquetas",1)


   /*Objetos da tela da Opção "NF Entrada"*/
	oGetNFEnt := TGet():New( 50,10,{|u| If(PCount()>0,cNFEnt:=u,cNFEnt)},oDlg,050,010,"",,CLR_BLACK,CLR_WHITE,,,,.T.,"",,/*bWhen*/,.F.,.F.,/*bChange*/,.F.,.F.,"SF1","cNFEnt",,,,,,,"NF Entrada",1)

	TButton():New( 116,036,"Confirmar",oDlg,{||Confirma(cPorta, cOpcImpr, cNFEnt),oDlg:End()},037,012,,,,.T.,,"",,,,.F. )
	TButton():New( 116,120,"Cancelar",oDlg,{||oDlg:End()},037,012,,,,.T.,,"",,,,.F. )

	// Ativa a opção Inicial conforme o conteudo da variável cOpcImpr
	AtivInat(cOpcImpr)

	oDlg:Activate(,,,.T.)

Return()


/*/{Protheus.doc} AtivInat
Ativa / Inativa as opções da tela
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 28/02/2022
@param cOpcImpr, character, Opção escolhida no primeiro combo/*/
Static Function AtivInat(cOpcImpr)

	If cOpcImpr == "Produto"
		RefreshProd( .T. /*lAtiva*/ )
		RefreshNFEnt( .F. /*lAtiva*/ )
	ElseIf cOpcImpr == "NF Entrada"
		RefreshNFEnt( .T. /*lAtiva*/ )
		RefreshProd( .F. /*lAtiva*/ )
	EndIf

Return


/*/{Protheus.doc} RefreshProd
Objetos da tela da Opção "Produto"
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 28/02/2022
@param lAtiva, logical, .T. se ativa ou .F. caso deva desabilitar
/*/
Static Function RefreshProd( lAtiva )

	If lAtiva
		oGetProd:lVisibleControl := .T.
		oGetProd:CtrlRefresh()

		oGetDescPrd:lVisibleControl := .T.
		oGetDescPrd:CtrlRefresh()

		oGetQtEtiq:lVisibleControl := .T.
		oGetQtEtiq:CtrlRefresh()

	Else // Limpa o conteúdo e desabilita os campos

		cCodProd := Space(30)
		oGetProd:lVisibleControl := .F.
		oGetProd:CtrlRefresh()

		cDescProd := Space(50)
		oGetDescPrd:lVisibleControl := .F.
		oGetDescPrd:CtrlRefresh()

		nQtdeEtiq := 1
		oGetQtEtiq:lVisibleControl := .F.
		oGetQtEtiq:CtrlRefresh()
	EndIf

Return


/*/{Protheus.doc} RefreshNFEnt
Objetos da tela da Opção "NF Entrada"
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 28/02/2022
@param lAtiva, logical, .T. se ativa ou .F. caso deva desabilitar
/*/
Static Function RefreshNFEnt(lAtiva)

	If lAtiva
		oGetNFEnt:lVisibleControl := .T.
		oGetNFEnt:CtrlRefresh()

	Else // Limpa o conteúdo e desabilita os campos

		cNFEnt := Space(9)
		oGetNFEnt:lVisibleControl := .F.
		oGetNFEnt:CtrlRefresh()
	EndIf

Return


/*/{Protheus.doc} Confirma
Confirma a impressão da Etiqueta
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 28/02/2022
@param cOpcImpr, character, Opção escolhida no primeiro combo
/*/
Static Function Confirma( cPorta, cOpcImpr, cNFEnt )

	If cOpcImpr == "Produto"
		EtProd( cPorta, cCodProd, nQtdeEtiq )
	ElseIf cOpcImpr == "NF Entrada"
		EtNFEnt( cPorta, cNFEnt )
	EndIf

Return


/*/{Protheus.doc} EtProd
Imprime a etiqueta de Produto.
ATENÇÃO Essa função é chamada de vários lugares diferentes do mesmo fonte !
@type function
@version 12.1.27
@author Jean Rehermann | Solutio
@since 03/12/2012
@param cPorta_, character, Porta de comunicação com a impressora
@param cCodProd_, character, Código do Produto
@param nQtdeEtiq_, numerical, Quantidade de cópias a ser impresso
@param nQtdeProd_, numerical, Quantidade de Produtos conforme Item da NF Entrada
@param cLocal_, character, Local do destino conforme a NF Entrada ou cadastro Produto
@param cNF_,character, Número da NF de Entrada relacionada
@param dDtDigit_, date, Data de Digitação
/*/
Static Function EtProd(cPorta_, cCodProd_, nQtdeEtiq_, nQtdeProd_, cLocal_, cNF_, dDtDigit_,cMVLocProc)

	Local cCodBar := ""
	Local cLocal  := ""

	Default cLocal_ := ""
	Default cNF_    := ""
	Default nQtdeProd_ := 0
	Default cMVLocProc := GetMV("MV_LOCPROC")
	
	If .NOT. SB1->( DbSeek( xFilial("SB1") + cCodProd_ ) )
		MsgStop("Produto " + AllTrim(cCodProd_) + " não localizado no cadastro.")
		Return
	EndIf

	cCodBar := AllTrim( IIF( Empty(SB1->B1_CODBAR), SB1->B1_COD, SB1->B1_CODBAR ) )
	cLocal  := AllTrim( IIF( Empty(cLocal_), SB1->B1_LOCPAD, cLocal_ ) )

	If ISPRINTER( cPorta_,,1/*1=Local,2=Server*/ )

		// Exemplo da etiqueta impressa em MAR_PRODUCAO\Estoques\etiquetas\ImpressaoEtiqueta.jpeg
		MSCBPRINTER("ARGOX",cPorta_,,,.F./*lSrv*/,,,,,,.T./*lDrvWin*/)
		MSCBCHKSTATUS(.F.)
		MSCBBEGIN(nQtdeEtiq_,3)
		
		MSCBSAY(8,20, AllTrim(cCodProd_) + " " + Substr(SB1->B1_DESC,01,25),'N','2','1,1')
		
		MSCBSAY(8,16, "Local " + cLocal,'N','2','1,1')
		
		MSCBSAY(30,16,'Controle de Qualidade '+IIF(cLocal == cMVLocProc,'Sim','Nao'),'N','2','1,1')
		
		If nQtdeProd_ > 0
			MSCBSAY(8,12, "Qtde " + cValToChar(nQtdeProd_),'N','2','1,1')
			MSCBSAY(30,12, "Nr NF " + cNF_,'N','2','1,1')
			MSCBSAY(55,12, "Data " + DtoC(dDtDigit_),'N','2','1,1')
		EndIf		

		MSCBSAYBAR(20,3,cCodBar,'N','MB07',8/*Altura*/,.F.,.F./*Imprime o nr do código de barras*/,.F.,Nil,3,2,.F.,.F.,Nil,.T.)
				
		MSCBEND()
      	MSCBCLOSEPRINTER()

	Else
		MsgStop("Impressora não disponível")
	EndIf

Return


/*/{Protheus.doc} PrintEtiq
Impressão da Etiqueta. Essa função é chamada do PE_MT103FIM.prw
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 21/03/2022
/*/
User Function PrintEtiq( cNFE, cSerie, cFornece, cLoja )

	Local cPorta_ := cPortDefault
	
	EtNFEnt( cPorta_, cNFE, cSerie, cFornece, cLoja )

Return


/*/{Protheus.doc} EtNFEnt
Mostra na tela os Itens da NF de Entrada
@type function
@version 12.1.27
@author Jorge Alberto - Solutio
@since 28/02/2022
/*/
Static Function EtNFEnt( cPorta, cNFE, cSerie, cFornece, cLoja )

	Local aItens := {}
	Local nOpcA  := 0
	Local nLin   := 0
	Local oOk    := LoadBitMap(GetResources(), "LBOK")
	Local oNo    := LoadBitMap(GetResources(), "LBNO")
	Local lMarca := .T.
	Local oDlgNFE
	Local oBrowse

	Default cNFE     := ""
	Default cSerie   := ""
	Default cFornece := ""
	Default cLoja    := ""

	If ISPRINTER( cPorta,,1/*1=Local,2=Server*/ )

		DbSelectArea("SF1")
		DbSetOrder(1)
		If DBseek( xFilial("SF1") + PadR(AllTrim(cNFE),9) + cSerie + cFornece + cLoja )

			DbSelectArea("SB1")
			DbSetOrder(1)

			DbSelectArea("SD1")
			DbSetOrder(1)

			SD1->( dbSeek(xFilial('SD1')+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA) )
			While !Eof() .And. SF1->F1_FILIAL+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA == SD1->D1_FILIAL+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA

				If SB1->( DbSeek( xFilial("SB1") + SD1->D1_COD ) )

					If SB1->B1_TIPO == 'SV'
						lMarca := .F.
					Else
						lMarca := .T.
					EndIf
					
					AADD( aItens, { lMarca, SD1->D1_ITEM, SD1->D1_COD, Left(SB1->B1_DESC,20), SD1->D1_QUANT, SD1->D1_UM, SD1->D1_LOCAL, SD1->D1_DTDIGIT })
				EndIf

				SD1->(DbSkip())
			EndDo

			If Len( aItens ) > 0

				oDlgNFE := MSDialog():New(092,132, 466,894,"Marque os itens para gerar Etiquetas",,,.F.,,,,,,.T.,,,.T. )
				oBrowse := TWBrowse():New( 036,008,370,145,,,,oDlgNFE,,,,,{||},,,,,,,.F.,,.T.,,.F.,,, )
				oBrowse:aHeaders  := {"","Item","Produto","Descrição","Quantidade","UM","Local" }
				oBrowse:setArray( aItens )

				oBrowse:bLine := {||{If(aItens[oBrowse:nAt,1],oOK,oNO),;
					aItens[oBrowse:nAt,2],;
					aItens[oBrowse:nAt,3],;
					aItens[oBrowse:nAt,4],;
					Transform(aItens[oBrowse:nAt,5],"@E 999,999,999.99"),;
					aItens[oBrowse:nAt,6],;
					aItens[oBrowse:nAt,7] } }
				oBrowse:bLDblClick := {|| aItens[oBrowse:nAt,1] := .NOT. aItens[oBrowse:nAt,1] }
				oBrowse:Refresh()

				oDlgNFE:Activate(,,,,EnchoiceBar(oDlgNFE,{||nOpcA:=1,oDlgNFE:End() },{||oDlgNFE:End() },,/*aBotoes*/))

				FreeObj(oDlgNFE)
				FreeObj(oBrowse)

				If nOpcA == 1
					For nLin := 1 to Len(aItens)
						If aItens[nLin,1]
							// Chama a rotina para imprimir os Produtos marcados
							EtProd( cPorta, aItens[nLin,3], 1, aItens[nLin,5], aItens[nLin,7], SF1->F1_DOC, aItens[nLin,8] )
							Sleep(500) // Aguarda meio segundo
						EndIf
					Next nLin
				EndIf

			Else
				MsgStop("Não foi possível localizar os Itens da NF de Entrada")
			EndIf

		Else
			MsgStop("NF não localizada")
		EndIf

	Else
		MsgStop("Impressora não disponível")
	EndIf

Return


/*/{Protheus.doc} RetDescProd
Pesquisa o produto informado na tela
@type function
@version 12.1.27
@author Jean Rehermann | Solutio
@since 03/12/2012
@param cCodProd, character, Código do Produto
@return character, Descrição do Produto
/*/
Static Function RetDescProd(cCodProd)

	Local cDescProd := Space(50)

	If .NOT. Empty(cCodProd)

		If SB1->( DbSeek( xFilial("SB1") + Padr(AllTrim(cCodProd),30) ) )
			cDescProd := Left(SB1->B1_DESC,50)
			oGetDescPrd:CtrlRefresh()
		Else
			MsgAlert("Produto não localizado no cadastro.")
		EndIf

	EndIf

Return(cDescProd)
