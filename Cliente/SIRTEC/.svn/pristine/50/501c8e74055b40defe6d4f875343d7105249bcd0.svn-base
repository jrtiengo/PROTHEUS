#include "protheus.ch"
#INCLUDE "rwmake.ch"
#INCLUDE "tbiconn.ch"

/*/{Protheus.doc} DEVTOOL0

	Exibe a tela inicial da ferramenta

	Registra ponto de entrada onde pode ser registrado novas funcionalidades

	@param	  aTools array contendo as ferramentas disponíveis
	@author  Fernando Alencar
	@version P11 e P10
	@since   15/09/2011
	@return
	@obs

/*/
User Function DEVTOOL0(aTools)

	Local aSelTools := {}

	aSelTools := SelectTools(aTools)

Return aSelTools



/*/{Protheus.doc} SelectTools

	Exibe a tela inicial da ferramenta para que o usuário possa selecionar
	as opções, e adiciona buttom para tela de creditos

	@param	  aTools array contendo as ferramentas disponíveis
	@author  Fernando Alencar
	@version P11 e P10
	@since   15/09/2011
	@return
	@obs

/*/
Static Function SelectTools(aTools)

	Local lInverte 	:= .f.
	Local cMarca 		:= 'OK'
	Local aHeader 		:= _Header()
	Local cAliasTRB 	:= _CriaTrab(aTools)
	Local oMainWnd
	Local aData		:= {}
	Local nOpc 		:= 0

	BLACK_COLOR 	:= 0
	BLUE_COLOR 	:= 8388608
	WHITE_COLOR 	:= 16777215
    GRAY_COLOR 	:= 8421504

	oMainWnd 	:= MsDialog():New(0,0,400,500, "DevTools",,,,,,,,,.T.)

	oFont:= TFont():New('Arial',,60,.t.)
	oPanel:= tPanel():New(0,0,"ACELERADOR",oMainWnd,oFont,.F.,,WHITE_COLOR,GRAY_COLOR,255,22,,)

	oBrwTrb := MsSelect():New(cAliasTRB,"OK","",aHeader,@lInverte,@cMarca,{30,5,175,245})
	Eval(oBrwTrb:oBrowse:bGoTop)
	oBrwTrb:oBrowse:Refresh()

	TButton():New(180,005,'Creditos'	,oMainWnd,{|| U_DEVTOOL1() 				 },60,15,,,,.T.)
	TButton():New(180,185,'Executar'	,oMainWnd,{|| nOpc := 1, oMainWnd:End() },60,15,,,,.T.)

	oMainWnd:Activate(,,,.T.)

	If nOpc = 1
		aData := _GetData(cAliasTRB, cMarca)
	EndIf

Return aData

/*/{Protheus.doc} Header

	@author  Fernando Alencar
	@since   13/11/2011
	@return  Array

/*/
Static Function _Header()

	Local aHeader := {}

	aadd(aHeader,{"OK"    	,,""        			 })
	aadd(aHeader,{"VERSAO" 	,,"Versão"    			 })
	aadd(aHeader,{"TOOL" 		,,"Ferramenta"		 })


Return aHeader

/*/{Protheus.doc} _CriaTrab

	@author  Fernando Alencar
	@since   13/11/2011
	@return  Alias

/*/
Static Function _CriaTrab(aTools)

	Local cAliasTRB := "TRB"
	Local _aStruTrb := {}
	//Local nDifere 	 := 0
	Local i			 := 0

	aadd(_aStruTrb,{"OK" 		 	,"C"	,02							,0})
	aadd(_aStruTrb,{"VERSAO" 	,"C"	,6							,0})
	aadd(_aStruTrb,{"TOOL" 	 	,"C"	,80							,0})
	aadd(_aStruTrb,{"FUNCAO"  	,"C"	,10							,0})

	If Select(cAliasTRB) > 0
		(cAliasTRB)->(DbCloseArea())
	Endif

	_cArqEmp := CriaTrab(_aStruTrb)
	dbUseArea(.T.,__LocalDriver,_cArqEmp,cAliasTRB)

	For i := 1 To Len(aTools)

	   	RecLock(cAliasTRB,.T.)
		 	TRB->OK     	:= space(2)
		 	TRB->VERSAO	:= aTools[i][1]
		 	TRB->TOOL 		:= aTools[i][2]
		 	TRB->FUNCAO	:= aTools[i][3]
	 	MsUnlock()

	Next

Return cAliasTRB


/*/{Protheus.doc} _GetData

	Retorna as linhas selecionadas em array multidimencional

	@author  Fernando Alencar
	@since   13/11/2011
	@return  Alias

/*/
Static Function _GetData(cAliasTRB, cMarca)

	 Local aArea := (cAliasTRB)->(GetArea())
	 Local aData := {}

	 (cAliasTRB)->(DbGoTop())
	 While (cAliasTRB)->(!EOF())
		 If (cAliasTRB)->(OK) = cMarca
		 	aadd(aData,{				  		;
		 			(cAliasTRB)->(VERSAO)  	,;
		 			(cAliasTRB)->(TOOL) 		,;
		 			(cAliasTRB)->(FUNCAO)	;
		 	})
		 EndIf

		 (cAliasTRB)->(DbSkip())
	 EndDo

	 RestArea(aArea)

Return aData
