#include "protheus.ch"
#include "restful.ch"
#Include 'tlpp-core.th'
#Include 'tlpp-rest.th'

/*/{Protheus.doc} RetFluigEnv
Retorna o token para acesso a API FLUIG GAP-68
@type function
@version  V 1.0
@author Junior Tiengo
@since 20/06/2025
@param cTipo,       C, Tipo da integração (por enquanto feito apenas com POST)
@param cEPFluig,    C, EndPoint da Função no Fluig
@param cBody,       C, Body da requisição usada na integração
@return jInfoRet, JSON, Informações que serão retornadas da API
/*/

User Function RetFluigEnv(cTipo, cEPFluig, cBody)

	Local cStringJson   := ''
	Local jInfoRet      := Nil
	Local cResultado    := ''
	Local oClientFluig  := Nil
	Local lContinua     := .T.
	Local cUrl          := GetNewPar('UC_URLFLUI'   ,'https://devfluig.xplanning.com.br')                                         //Armazenará a URL base da API do Fluig
	Local cCkey         := GetNewPar('UC_CKEYFLU'   ,'integrador')                                                                //Consumer Key para autenticação OAuth 1.0a.
	Local cCsecret      := GetNewPar('UC_CSECFLU'   ,'integrador')                                                                //Consumer Secret para autenticação OAuth 1.0a.
	Local cToken        := GetNewPar('UC_ACTKFLU'   ,'5835717e-a734-4bf1-ba56-26bfeda0bfeb')                                      //Access Token para autenticação OAuth 1.0a.
	Local cTSecret      := GetNewPar('UC_SETKFLU'   ,'35223677-0415-4e7a-8a7e-54c5b91f0ab9643a9254-f8d4-4ec4-a74f-cc3a6e24e07e')  //Token Secret para autenticação OAuth 1.0a.

	//Pega o JSON do Body
	jInfoRet            := JsonObject():New()
	cStringJson         := jInfoRet:FromJson(cBody)

	//Se houve falha na transformação do body em JsonObject, flaga para não continuar
	If ! Empty(cStringJson)
		jInfoRet:FromJson('{"code":"ERRO", "mensagem":"' + cStringJson + '"}')
		lContinua := .F.
	EndIf

	//Se tiver tudo ok
	If lContinua
		//Aciona a integração com o Fluig
		oClientFluig := FWoAuth1Fluig():New(cCkey,;        //Consumer Key
		cCsecret,;                                         //Consumer Secret
		cUrl,;                                             //Endereco
		'')                                                //Callback

		//Define o Token e o SecretToken
		oClientFluig:SetToken(cToken)            //Access Token
		oClientFluig:SetSecretToken(cTSecret)    //Token Secret

		//Se for POST, executa a instrução de autenticação
		If  (cTipo == 'POST')
			cResultado := oClientFluig:Post(cUrl+cEPFluig,"",cBody)

		Else
			jInfoRet:FromJson('{"code":"ERRO", "message":"Metodo nao implementado"}')
			lContinua := .F.
		EndIf
	EndIf

	//Se deu tudo certo com a autenticação
	If lContinua
		jInfoRet:FromJson(cResultado)
	EndIf

Return(jInfoRet)
